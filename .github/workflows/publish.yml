name: UNF activity scraper and publish

on:
  workflow_dispatch: {}
  schedule:
  - cron: "10 6,10,14,20 * * *"  # UTC: 01:10, 06:10, 11:10, 14:10, 16:10, 20:10

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ICS_PAGES: 4  # Adjustable: number of pages to crawl, reduce for faster execution
    steps:
      - name: Show trigger type and run time
        run: |
          echo "Trigger type: $GITHUB_EVENT_NAME"
          echo "Run time: $(date '+%Y-%m-%d %H:%M:%S')"
      - name: Set workflow run title
        run: |
          echo "Set workflow run title"
          if [ "$GITHUB_EVENT_NAME" = "schedule" ]; then
            echo "run_title=Scheduled trigger $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          elif [ "$GITHUB_EVENT_NAME" = "push" ]; then
            echo "run_title=Push trigger $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          elif [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            echo "run_title=Manual trigger $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          else
            echo "run_title=Other trigger $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          fi
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python (with pip cache)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install deps
        run: |
          pip install -r requirements.txt

      - name: Clean dist
        run: |
          rm -rf dist
          mkdir -p dist

  # Fail fast if secrets missing (never echo real values)
      - name: Check required secrets exist
        env:
          UNF_USER: ${{ secrets.UNF_USER }}
          UNF_PASS: ${{ secrets.UNF_PASS }}
        run: |
          if [ -z "${UNF_USER}" ] || [ -z "${UNF_PASS}" ]; then
            echo "Missing UNF_USER/UNF_PASS secrets."
            exit 1
          fi

      - name: Generate ICS feeds
        env:
          UNF_USER: ${{ secrets.UNF_USER }}
          UNF_PASS: ${{ secrets.UNF_PASS }}
        run: |
          echo "Using number of pages: ${ICS_PAGES}"
          python unf_events_to_ics.py --out-dir dist --pages "$ICS_PAGES"
          ls -lah dist

      - name: Update index.html (time + file list)
        run: |
          set -e
          dt=$(date -u "+%Y-%m-%d %H:%M:%S")
          # Update last update time (UTC)
          sed -i "s|<span id=\"last-update-utc\">.*</span>|<span id=\"last-update-utc\">UTC: $dt</span>|" index.html
          # Generate file list (files under dist)
          {
            echo "<table><thead><tr><th>File</th><th>Size(bytes)</th><th>Last Modified(UTC)</th></tr></thead><tbody>"
            for f in dist/*; do
              [ -f "$f" ] || continue
              base=$(basename "$f")
              size=$(stat -c %s "$f")
              mtime=$(stat -c %Y "$f")
              human=$(date -u -d "@$mtime" "+%Y-%m-%d %H:%M:%S UTC")
              echo "<tr><td><a href=\"$base\">$base</a></td><td>$size</td><td>$human</td></tr>"
            done
            echo "</tbody></table>"
          } > filelist.tmp
          perl -0777 -i -pe 'my $r=do{local $/;open my $fh,"<","filelist.tmp";<$fh>}; s/<!-- FILE_LIST_START -->.*?<!-- FILE_LIST_END -->/<!-- FILE_LIST_START -->\n$r<!-- FILE_LIST_END -->/s' index.html
          mkdir -p dist
          cp index.html dist/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
